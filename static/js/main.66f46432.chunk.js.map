{"version":3,"sources":["components/ContactList/contactList.module.css","components/ContactList/fade.module.css","components/Filter/fade.module.css","components/Section/section.module.css","components/ContactForm/contactForm.module.css","components/Wrapper/wrapper.module.css","components/Section/fade.module.css","components/Notification/ErrorNotification.module.css","components/Filter/filter.module.css","components/Spinner/Spinner.module.css","components/Notification/fade.module.css","components/Wrapper/Wrapper.js","components/Section/Section.js","components/Notification/ErrorNotification.js","redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-selectors.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Spinner/Spinner.js","components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","Wrapper","children","className","styles","wrapper","Section","title","section","CSSTransition","in","appear","classNames","fadeStyles","timeout","ErrorNotification","name","errorNotification","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactsRequest","removeContactsSuccess","removeContactsError","changeFilter","axios","defaults","baseURL","addContact","number","dispatch","contactsActions","post","then","response","data","catch","error","fetchContact","get","removeContact","id","delete","ContactForm","state","handleNameChange","e","setState","target","value","handleNumberChange","handleSubmit","preventDefault","props","handleAddContact","this","onSubmit","form","type","onChange","addButton","Component","mapDispatchToProps","contactsOperations","connect","getContacts","contacts","items","getFilter","filter","getLoading","loading","getVisibleContact","createSelector","contact","toLowerCase","includes","getContactById","contactId","find","item","ownProps","contactsSelectors","onRemoveContact","listItem","deleteBtn","onClick","TransitionGroup","component","list","map","key","fade","onChangeFilter","styes","Spinner","spinner","color","height","width","App","onFetchContacts","errorFade","unmountOnExit","filterFade","isLoadingContacts","contactListFade","createReducer","action","payload","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66f46432.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactList_list__2--5v\",\"listItem\":\"contactList_listItem__kBEh6\",\"deleteBtn\":\"contactList_deleteBtn__2ycmg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__18wTb\",\"enterActive\":\"fade_enterActive__1AfBP\",\"exit\":\"fade_exit__ojKEV\",\"exitActive\":\"fade_exitActive__y4byW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__2MFU5\",\"enterActive\":\"fade_enterActive__1edXD\",\"exit\":\"fade_exit__245E2\",\"exitActive\":\"fade_exitActive__1eunl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"section_section__2_nHZ\",\"title\":\"section_title__36rBM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__1z8fW\",\"addButton\":\"contactForm_addButton__2QFr-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"wrapper_wrapper__2MtDc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"fade_appear__2cLJL\",\"appearActive\":\"fade_appearActive__2nKIH\",\"appearExit\":\"fade_appearExit__17ifG\",\"appearExitActive\":\"fade_appearExitActive__226vS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorNotification\":\"ErrorNotification_errorNotification__TE2_h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__jwpkD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__3jWJ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__7aOPM\",\"enterActive\":\"fade_enterActive__26j8X\",\"exit\":\"fade_exit__ASpK7\",\"exitActive\":\"fade_exitActive__3sShN\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './wrapper.module.css';\r\n\r\nconst Wrapper = ({ children }) => {\r\n  return <div className={styles.wrapper}>{children}</div>;\r\n};\r\n\r\nWrapper.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Wrapper;\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './section.module.css';\r\nimport fadeStyles from './fade.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <CSSTransition in={true} appear={true} classNames={fadeStyles} timeout={500}>\r\n        <h2 className={styles.title}>{title}</h2>\r\n      </CSSTransition>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ErrorNotification.module.css';\r\n\r\nconst ErrorNotification = ({ name }) => {\r\n  return (\r\n    <div className={styles.errorNotification}>\r\n      {name}\r\n      <br /> is already in contacts.\r\n    </div>\r\n  );\r\n};\r\n\r\nErrorNotification.propTypes = {\r\n  name: PropTypes.any,\r\n};\r\n\r\nexport default ErrorNotification;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n/* import { v4 as uuidv4 } from 'uuid'; */\r\n/* import actionsTypes from './contactsActionsTypes'; */\r\n\r\n/* const addContact = (name, number) => ({\r\n  type: actionsTypes.ADD,\r\n  payload: {\r\n    contact: { id: uuidv4(), name, number },\r\n  },\r\n}); */\r\n\r\n/* const removeContact = contactId => ({\r\n  type: actionsTypes.REMOVE,\r\n  payload: {\r\n    contactId,\r\n  },\r\n}); */\r\n\r\n/* const changeFilter = filter => ({\r\n  type: actionsTypes.CHANGE_FILTER,\r\n  payload: {\r\n    filter,\r\n  },\r\n}); */\r\n\r\n/* const addContact = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    contact: { id: uuidv4(), name, number },\r\n  },\r\n})); */\r\n\r\nconst addContactRequest = createAction('contacts/addRequest');\r\nconst addContactSuccess = createAction('contacts/addSuccess');\r\nconst addContactError = createAction('contacts/addError');\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchError');\r\n\r\nconst removeContactsRequest = createAction('contacts/removeRequest');\r\nconst removeContactsSuccess = createAction('contacts/removeSuccess');\r\nconst removeContactsError = createAction('contacts/removeError');\r\n\r\n/* const removeContact = createAction('contacts/remove'); */\r\nconst changeFilter = createAction('contacts/change');\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError,\r\n  /*   addContact, */\r\n /*  removeContact, */\r\n  changeFilter,\r\n};\r\n","import axios from 'axios';\r\nimport contactsActions from './contactsActions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:2000';\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  dispatch(contactsActions.addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', { name, number })\r\n    .then(response => {\r\n      dispatch(contactsActions.addContactSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(contactsActions.addContactError(error)));\r\n};\r\n\r\nconst fetchContact = () => dispatch => {\r\n  dispatch(contactsActions.fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(response => {\r\n      dispatch(contactsActions.fetchContactsSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(contactsActions.fetchContactsError(error)));\r\n};\r\n\r\nconst removeContact = id => dispatch => {\r\n  dispatch(contactsActions.removeContactsRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactsActions.removeContactsSuccess(id)))\r\n    .catch(error => dispatch(contactsActions.removeContactsError(error)));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  fetchContact,\r\n  removeContact,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n/* import contactsActions from '../../redux/contacts/contactsActions'; */\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\nimport styles from './contactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleNameChange = e => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n\r\n  handleNumberChange = e => {\r\n    this.setState({ number: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n\r\n    e.preventDefault(); \r\n\r\n    this.props.handleAddContact(name, number);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.handleNameChange}\r\n          ></input>\r\n        </label>\r\n\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"number\"\r\n            value={number}\r\n            onChange={this.handleNumberChange}\r\n          ></input>\r\n        </label>\r\n        <button type=\"submit\" className={styles.addButton}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  handleAddContact: contactsOperations.addContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.items;\r\nconst getFilter = state => state.contacts.filter;\r\nconst getLoading = state => state.contacts.loading;\r\n\r\n/* const getVisibleContact = state => {\r\n  const items = getContacts(state);\r\n  const filter = getFilter(state).toLowerCase();\r\n\r\n  return items.filter(contact => contact.name.toLowerCase().includes(filter));\r\n}; */\r\n\r\n/* const getContactById = (state, contactId) => {\r\n  const contacts = getContacts(state);\r\n\r\n  return contacts.find(item => item.id === contactId);\r\n}; */\r\n\r\nconst getVisibleContact = createSelector(\r\n  [getContacts, getFilter],\r\n  (items, filter) =>\r\n    items.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);\r\n\r\nconst getContactById = createSelector(\r\n  [(state, contactId) => contactId, getContacts],\r\n  (contactId, contacts) => contacts.find(item => item.id === contactId),\r\n);\r\n\r\nexport default { getLoading, getFilter, getVisibleContact, getContactById };\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from '../ContactList/contactList.module.css';\r\n/* import contactsActions from '../../redux/contacts/contactsActions'; */\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\r\n\r\nconst ContactListItem = ({ name, number, onRemoveContact }) => {\r\n  return (\r\n    <li className={styles.listItem}>\r\n      <div>\r\n        {name}: {number}\r\n      </div>\r\n      <button\r\n        className={styles.deleteBtn}\r\n        type=\"button\"\r\n        onClick={onRemoveContact}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const item = contactsSelectors.getContactById(state, ownProps.id);\r\n\r\n  return { ...item };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onRemoveContact: () =>\r\n    dispatch(contactsOperations.removeContact(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './contactList.module.css';\r\nimport fade from './fade.module.css';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.list}>\r\n      {contacts.map(({ id }) => (\r\n        <CSSTransition key={id} timeout={250} classNames={fade}>\r\n          <ContactListItem key={id} id={id} />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getVisibleContact(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\nimport styes from './filter.module.css';\r\nimport fade from './fade.module.css';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <CSSTransition in={true} timeout={250} classNames={fade}>\r\n      <div className={styes.filter}>\r\n        <p>Find contacts by name</p>\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        />\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.changeFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport styles from './Spinner.module.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className={styles.spinner}>\r\n      <Loader type=\"ThreeDots\" color=\"#3F51B5\" height={80} width={80} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Wrapper from './Wrapper/Wrapper';\r\nimport Section from './Section/Section';\r\nimport ErrorNotification from './Notification/ErrorNotification';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Filter from './Filter/Filter';\r\nimport Spinner from './Spinner/Spinner';\r\nimport contactsOperations from '../redux/contacts/contactsOperations';\r\nimport contactsSelectors from '../redux/contacts/contacts-selectors';\r\n\r\nimport contactListFade from '../components/ContactList/fade.module.css';\r\nimport filterFade from '../components/Filter/fade.module.css';\r\nimport errorFade from '../components/Notification/fade.module.css';\r\nimport { connect } from 'react-redux';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <CSSTransition timeout={2500} classNames={errorFade} unmountOnExit>\r\n          <ErrorNotification />\r\n        </CSSTransition>\r\n\r\n        <Section title=\"Phonebook\">\r\n          <ContactForm />\r\n        </Section>\r\n\r\n        <Section title=\"Contacts\">\r\n          <CSSTransition timeout={250} classNames={filterFade}>\r\n            <Filter />\r\n          </CSSTransition>\r\n          {this.props.isLoadingContacts && <Spinner />}\r\n        </Section>\r\n\r\n        <CSSTransition timeout={250} classNames={contactListFade}>\r\n          <ContactList />\r\n        </CSSTransition>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToPrors = state => ({\r\n  isLoadingContacts: contactsSelectors.getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchContacts: contactsOperations.fetchContact,\r\n};\r\n\r\nexport default connect(mapStateToPrors, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n/* import contactsActionsTypes from './contactsActionsTypes'; */\r\nimport contactsActions from './contactsActions';\r\n\r\n/* const items = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case contactsActions.addContact.type:\r\n      return [...state, payload.contact];\r\n\r\n    case contactsActions.removeContact.type:\r\n      return state.filter(contact => contact.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}; */\r\n\r\n/* const filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case contactsActions.changeFilter.type:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}; */\r\n\r\nconst addContact = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\n\r\nconst removeContact = (state, action) => {\r\n  return state.filter(contact => contact.id !== action.payload);\r\n};\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.fetchContactsSuccess]: (state, action) => action.payload,\r\n  [contactsActions.addContactSuccess]: addContact,\r\n  [contactsActions.removeContactsSuccess]: removeContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactsActions.changeFilter]: (state, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactsActions.addContactRequest]: () => true,\r\n  [contactsActions.addContactSuccess]: () => false,\r\n  [contactsActions.addContactError]: () => false,\r\n\r\n  [contactsActions.fetchContactsRequest]: () => true,\r\n  [contactsActions.fetchContactsSuccess]: () => false,\r\n  [contactsActions.fetchContactsError]: () => false,\r\n\r\n  [contactsActions.removeContactsRequest]: () => true,\r\n  [contactsActions.removeContactsSuccess]: () => false,\r\n  [contactsActions.removeContactsError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","/* import { createStore, combineReducers } from 'redux';\r\nimport contactsReducer from './contacts/contactsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n\r\nexport default store; */\r\n\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contactsReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './components/base.css';\nimport App from './components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}